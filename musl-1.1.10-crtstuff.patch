--- musl-1.1.10/crt/crt1.c.omv~	2015-06-23 22:55:27.354614625 +0200
+++ musl-1.1.10/crt/crt1.c	2015-06-23 22:55:35.475604186 +0200
@@ -7,6 +7,8 @@
 int main();
 void _init() __attribute__((weak));
 void _fini() __attribute__((weak));
+void *__dso_handle = 0;
+
 _Noreturn int __libc_start_main(int (*)(), int, char **,
 	void (*)(), void(*)(), void(*)());
 
--- musl-1.1.10/crt/crtbegin.c.omv~	2015-06-23 22:55:58.651571865 +0200
+++ musl-1.1.10/crt/crtbegin.c	2015-06-23 22:56:15.688545788 +0200
@@ -0,0 +1,80 @@
+/*-
+ * Copyright 1996, 1997, 1998, 2000 John D. Polstra.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * $FreeBSD: src/lib/csu/common/crtbegin.c,v 1.8 2002/01/28 19:02:34 obrien Exp $
+ */
+
+// RICH: #include <sys/param.h>
+// RICH: #include <stdlib.h>
+
+typedef void (*fptr)(void);
+
+static fptr ctor_list[1] __attribute__((section(".ctors"))) = { (fptr) -1 };
+static fptr dtor_list[1] __attribute__((section(".dtors"))) = { (fptr) -1 };
+
+static void
+do_ctors(void)
+{
+    fptr *fpp;
+
+    for(fpp = ctor_list + 1;  *fpp != 0;  ++fpp)
+        ;
+    while(--fpp > ctor_list)
+        (**fpp)();
+}
+
+static void
+do_dtors(void)
+{
+    fptr *fpp;
+
+    for(fpp = dtor_list + 1;  *fpp != 0;  ++fpp)
+        (**fpp)();
+}
+
+/*
+ * With very large programs on some architectures (e.g., the Alpha),
+ * it is possible to get relocation overflows on the limited
+ * displacements of call/bsr instructions.  It is particularly likely
+ * for the calls from _init() and _fini(), because they are in
+ * separate sections.  Avoid the problem by forcing indirect calls.
+ */
+static void (*p_do_ctors)(void) = do_ctors;
+static void (*p_do_dtors)(void) = do_dtors;
+
+extern void _init(void) __attribute__((section(".init")));
+
+extern void _fini(void) __attribute__((section(".fini")));
+
+void
+_fini(void)
+{
+    (*p_do_dtors)();
+}
+
+void
+_init(void)
+{
+    (*p_do_ctors)();
+}
--- musl-1.1.10/crt/crtend.c.omv~	2015-06-23 22:56:02.108566730 +0200
+++ musl-1.1.10/crt/crtend.c	2015-06-23 22:56:18.028542057 +0200
@@ -0,0 +1,33 @@
+/*-
+ * Copyright 1996-1998 John D. Polstra.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * $FreeBSD: src/lib/csu/common/crtend.c,v 1.3 1999/08/27 23:57:57 peter Exp $
+ */
+
+// RICH: #include <sys/cdefs.h>
+
+typedef void (*fptr)(void);
+
+static fptr ctor_end[1] __attribute__((section(".ctors"), unused, used)) = { 0 };
+static fptr dtor_end[1] __attribute__((section(".dtors"), unused, used)) = { 0 };
--- musl-1.1.10/include/sys/ioctl.h.omv~	2015-06-23 12:15:23.067316454 +0200
+++ musl-1.1.10/include/sys/ioctl.h	2015-06-23 12:25:36.082059618 +0200
@@ -8,6 +8,21 @@ extern "C" {
 
 int ioctl (int, int, ...);
 
+#define _IOC_NRSHIFT	0
+#define _IOC_NRBITS	8
+#define _IOC_TYPEBITS	8
+#define _IOC_SIZEBITS	14
+#define _IOC_DIRBITS	2
+#define _IOC_TYPESHIFT	(_IOC_NRSHIFT+_IOC_NRBITS)
+#define _IOC_SIZESHIFT	(_IOC_TYPESHIFT+_IOC_TYPEBITS)
+#define _IOC_DIRSHIFT	(_IOC_SIZESHIFT+_IOC_SIZEBITS)
+#define _IOC_SIZEMASK	((1 << _IOC_SIZEBITS)-1)
+#define _IOC_NRMASK	((1 << _IOC_NRBITS)-1)
+#define _IOC_DIRMASK	((1 << _IOC_DIRBITS)-1)
+#define _IOC_DIR(nr)	(((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)
+#define _IOC_NR(nr)	(((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)
+#define _IOC_SIZE(nr)	(((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)
+
 #ifdef __cplusplus
 }
 #endif
--- musl-1.1.10/Makefile.omv~	2015-06-23 22:55:39.488598856 +0200
+++ musl-1.1.10/Makefile	2015-06-23 22:55:54.528577884 +0200
@@ -44,7 +44,7 @@ ALL_INCLUDES = $(sort $(wildcard include
 
 EMPTY_LIB_NAMES = m rt pthread crypt util xnet resolv dl
 EMPTY_LIBS = $(EMPTY_LIB_NAMES:%=lib/lib%.a)
-CRT_LIBS = lib/crt1.o lib/Scrt1.o lib/rcrt1.o lib/crti.o lib/crtn.o
+CRT_LIBS = lib/crt1.o lib/Scrt1.o lib/rcrt1.o lib/crti.o lib/crtn.o lib/crtbegin.o lib/crtend.o
 STATIC_LIBS = lib/libc.a
 SHARED_LIBS = lib/libc.so
 TOOL_LIBS = lib/musl-gcc.specs
